// We compute symbolicly compute the special fibers for different primes for the curve C^+

// a->a^p and b->b^p

K<r5> := QuadraticField(5);
R<a,b,c> := PolynomialRing(Rationals(),3);
_<x> := PolynomialRing(R);


/////// The case char \neq 2,5 - Lemma 7.5 ///////

// We consider q | a hence a=0\mod q, so in the model below we replace a by 0 and b=c^5 mod q.

f := (x + 2*c) * (x^5-5*c^2*x^3+5*c^4*x - 2*(0 - c^5));

fac := Factorization(f);

assert #fac eq 2;

e1 := fac[1][2];
f1 := fac[1][1];
assert e1 eq 2;
assert f1 eq x + 2*c;


e2 := fac[2][2];
f2 := fac[2][1];
assert e2 eq 2;
assert f2 eq x^2 - c*x - c^2;


assert Discriminant(f2) eq 5*c^2;




// We consider q | b hence b=0\mod q, so in the model below we replace b by 0 and a=c^5 mod q.

f := (x + 2*c) * (x^5-5*c^2*x^3+5*c^4*x - 2*(c^5 - 0));

fac := Factorization(f);

assert #fac eq 3;

e1 := fac[1][2];
f1 := fac[1][1];
assert e1 eq 1;
assert f1 eq x - 2*c;

e2 := fac[2][2];
f2 := fac[2][1];
assert e2 eq 1;
assert f2 eq x + 2*c;

e3 := fac[3][2];
f3 := fac[3][1];
assert e3 eq 2;
assert f3 eq x^2 + c*x - c^2;

assert Discriminant(f3) eq 5*c^2;



/////// The case char = 5 - Lemma 7.6///////

R<a,b,c> := PolynomialRing(K,3);
_<x> := PolynomialRing(R);

//// Case 5|a ////
// We replace a -> 5^7*a since p>= 7

f := (x + 2*c) * (x^5-5*c^2*x^3+5*c^4*x - 2*(5^7*a - (c^5 - 5^7*a)));
f := Evaluate(f, r5*x - 2*c)/5^3;
coef := Coefficients(f);
assert coef eq [0, -2500*r5*a, c^4, -2*r5*c^3, 7*c^2, -2*r5*c, 1];
fb := x^6 + 2*c^2*x^4 + c^4*x^2;
fbequiv := x^2 * (x - 2*c)^2 * (x + 2*c)^2;
assert (fb - fbequiv) eq 5*(2*c^2*x^4 - 3*c^4*x^2);


//// Case 5|b ////
// We replace b -> 5^7*b since p>= 7

f := (x + 2*c) * (x^5-5*c^2*x^3+5*c^4*x - 2*((c^5 - 5^7*b) - 5^7*b));
f := Evaluate(f, r5*x + 2*c)/r5^5;
coef := Coefficients(f);
assert coef eq [10000*r5*b*c, 12500*b + 4*c^5, 9*r5*c^4, 38*c^3, 15*r5*c^2, 14*c, r5];
fb := 4*c*x^5 + 3*c^3*x^3 + 4*c^5*x;
fbequiv := -c*x*(x - 2*c)^2 * (x + 2*c)^2;
assert (fb - fbequiv) eq 5*(c*x^5 - c^3*x^3 + 4*c^5*x); 